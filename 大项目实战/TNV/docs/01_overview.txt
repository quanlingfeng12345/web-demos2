========
项目概述
========

1. 单机服务器
-------------

在同一台服务器上保存所有项目文件，不同类型的文件存放在不同的子目录下。

 ________________________________
|应用服务器                      |
|                                |
|            app/                |
|            ├── inc/            |
|            ├── src/            |
|            ├── lib/            |
|            ├── bin/            |
|            ├── res/            |
|            └── doc/            |
|________________________________|

在这样的项目文件组织结构中，包含inc目录下的头文件，编译src目录下的源文件，
链接lib目录下的库文件，在bin目录下生成二进制可执行文件。运行bin目录下的可
执行文件，产生一到多个应用程序进程实例，它们会根据用户的需要，从res目录下
获取，诸如图像、音频、视频等，不同类型的多媒体资源。doc目录用于存放与项目
有关的各种文档。

优点

实现简单：在一台计算机上，直接利用文件系统划分不同类型的文件。

访问方便：无需借助任何复杂技术，就能直接访问资源目录下的多媒体数据。

缺点

不易管理：源代码、可执行代码、第三方代码和资源媒体，紧密耦合在同一台计算
机的同一个文件系统中。文件越多，分类越细，目录结构越复杂，文件存放越混乱。

性能不佳：同时为多个客户机提供服务的多个进程或线程，同时访问同一台计算机
同一个文件系统中的资源文件，会导致服务器整体性能下降，延长响应时间，影响
用户体验。

2. 独立服务器
-------------

随着公司业务的不断发展，将代码和资源放在同一台服务器上的弊端将日益凸显，
为此考虑引入独立的资源服务器专门负责存储和管理包括图像、音频、视频等在内
的多媒体资源。具体操作过程包括：

通过FTP或SSH将资源文件上传到资源服务器的某个特定目录下；
在资源服务器上布署Ngnix或Apache，可以特定URL访问该目录下的资源文件；
应用程序通过此URL从资源服务器上下载该资源文件，为客户机提供业务服务。

 ________________________________
|资源服务器                      |
|                                |
|         res/                   |
|         ├── image/             |
|         ├── audio/             |
|         └── video/             |
|                                |
|    FTP/SSH        Ngnix/Apache |
|________________________________|
        ^              ^    |
资源文件|           URL|    |资源文件
 _______|______    ____|____v____
|              |  |              |
|  上传客户机  |  |  应用服务器  |
|______________|  |______________|
                       ^    |
                    API|    |资源数据
                   ____|____v____
                  |              |
                  |  业务客户机  |
                  |______________|

优点

对图像、音频、视频等多媒体资源的访问，因其涉及到频繁的系统上下文切换和大
量的磁盘I/O操作，通常都会十分消耗系统资源。将其分离出来，运行在独立的资
源服务器上，势必极大地减轻应用服务器的压力，使之更加专注于发挥面向业务逻
辑的动态处理效能。

将有关数据存储的工作，交由独立的资源服务器专门负责，便于对数据进行扩容、
容灾以及迁移。

独立的资源服务器可以借助于负载均衡、数据缓存等技术手段，进一步提高对资源
的访问效率，同时为日后迁移到CDN做好准备。

缺点

只靠一台资源服务器容易形成性能瓶颈，其容灾和垂直扩展性也稍差。

3. 分布式存储
-------------

随着业务的持续发展，对应用系统的高响应性和高可用性的要求会越来越高。为了
解决单台资源服务器性能有限、容灾和垂直扩展性差等问题，考虑引入分布式存储。
分布式存储由以下三部分组成：

容灾系统：相互备份和热切换；
存储系统：实际存储文件内容；
仲裁系统：由算法确定文件的存储位置。

 ________________________________
|分布式存储                      |
|                                |
|            容灾系统            |
|                                |
|  __________存储系统__________  |
| |                            | |
| | 存储主机 存储主机 存储主机 | |
| |____________________________| |
|                                |
|            仲裁系统            |
|________________________________|
        ^              ^    |
资源文件|           URL|    |资源文件
 _______|______    ____|____v____
|              |  |              |
|  上传客户机  |  |  应用服务器  |
|______________|  |______________|
                       ^    |
                    API|    |资源数据
                   ____|____v____
                  |              |
                  |  业务客户机  |
                  |______________|

优点

高响应性：通过在多台存储主机间均衡负载，消除了由单台资源服务器形成的性能
瓶颈，缩短了对应用服务器的响应时间。

高可用性：多台存储主机互为备份，任何一台主机出现故障，都不至影响整个系统
的平稳运行。

高扩展性：可根据业务需要，灵活增减存储主机的数量，无需中断系统运行。

缺点

系统复杂度稍高，需要更多的服务器。

4. 分布式流媒体
---------------

将分布式存储技术应用于流媒体服务业务即分布式流媒体。具体包括以下几个部分：

Keepalived：在多台存储服务器和多台跟踪服务器之间实现热切换；
组：内容对等的存储服务器集合，其文件系统通过GlusterFS实时同步；
存储服务器：实际存储流媒体文件的服务器，同组存储服务器互为备份；
跟踪服务器集群：由多台跟踪服务器组成的集群，互为热备，负载均衡；
跟踪服务器：跟踪服务器负责管理所有存储服务器和组。每台存储服务器启动后，
都会与跟踪服务器建立连接，向其通告自己所隶属的组，并保持周期性心跳。跟踪
服务器据此维护组——存储服务器映射表；
客户机：提供上传、删除等针对存储服务器内容的管理和维护功能；
HTTP服务器：内置的Web Server，支持基于HTTP的流媒体下载和播放；
HTTP客户机：支持HTTP协议的流媒体播放器。

 ________________________________
|分布式流媒体                    |
|                                |
|           Keepalived           |
|                                |
|  _____________组_____________  |
| |         GlusterFS          | |
| | 存储服务器 存储服务器 .... | |
| |____________________________| |
|                                |
|  _____________组_____________  |
| |         GlusterFS          | |
| | 存储服务器 存储服务器 .... | |
| |____________________________| |
|               .                |
|               .                |
|               .                |
|                                |
|  _______跟踪服务器集群_______  |
| |                            | |
| | 跟踪服务器 跟踪服务器 .... | |
| |             _______________| |
| | 跟踪服务器 |                 |
| |____________|     HTTP服务器  |
|________________________________|
        ^              ^    |
媒体文件|           URL|    |媒体文件
 _______|______    ____|____v____
|              |  |              |
|    客户机    |  |  HTTP客户机  |
|______________|  |______________|
